/*
1. Getting the app have ecosystem set up: 
-> First declare the css variable for reuseable
-> ALong with create general class for style like body , h1, h2, 
button, icon style,... for add on later

What should declare variable, what should not?
mostly will declare variable that most likely change 
the value at a breakpoint (like media screen)

Summary: 
To build an application interface:
1. Declare css variables for reuasuable (for most likely change media queries)
2. create general class
3. build class layout first like two column ,...
before applying class to element
*/
/* VARIABLES */
:root {
  --standard-width: 850px;
  /* TEXT VARIABLES*/
  --text-dark: #000;
  --text-light: #fff;
  --text-grey: #adbdcc;

  /* font */
  --body-font: "Roboto", sans-serif;
  --heading-font: "Anek Telugu", sans-serif;

  /* heading size: these is standard size at company */
  --h1-size: 60px; /* standard is 94*/
  --h2-size: 50px;
  --h3-size: 40px;
  --h4-size: 32px;
  --h5-size: 22px;
  --h6-size: 18px;

  /* line height */
  --h1-line-height: 80px;
  --h2-line-height: 75px;

  /* COLOR VARIABLES */
  --link-purple-1: #6962f7;
  --link-purple-2: #7000ff;
  --link-blue-1: #00d4ff;
  --link-primary-accent-color: #0a2540; /* accent color: is màu nhấn*/

  /* SPACING VARIABLES */
  --spacing-sm: 8px;
  --spacing-md: 16px;
  --spacing-lg: 32px;
  --spacing-xl: 64px;

  /* body style */
  --bg-white: white;
  --bg-light-white: #f7f9fc;

  /* Subheading, subtitle, secondary text style */
  --subtitle-size: 17px;
  --subtitle-line-height: 26px;
  --secondary-text-size: 14px;
  --secondary-text-line-height: 18px;

  /* paragragh size */
  --p-size: 17px;
  --p-line-height: 26px;

  /* button style */
  --primary-btn-hover-color: #6d7a88;
  --btn-size: 15px;

  --standard-box-shadow: 0px 2px 40px rgba(0, 0, 0, 0.15);
  --primary-gradient: linear-gradient(
    101.33deg,
    #08209a 0.76%,
    /*place at 0.76%*/ #6563ff 33.33%,
    /*place at 33.33%*/ #36c5f0 76.92%,
    #83e2ff 96.96%
  );

  --standard-border-radius: 20px;
}

/* create general class for inherit later */

/* GENERAL ELEMENT STYLES*/
body {
  font-family: var(--body-font);
  color: var(--text-dark);
  width: 100%;
  margin: 0;
  box-sizing: border-box;
  padding: var(--spacing-sm) 0 0 0;
  background-color: var(--bg-white);
  display: flex;
  flex-direction: column; /*cross-axis is x*/
  justify-content: center;
  align-items: center;
  /*height: 100vh;*/ /*since the body or does not specify 
  a height, so now the height is content size
  */
  /*border: 1px solid black;*/
  position: relative;
}

h1 {
  font-family: var(--heading-font);
  font-weight: 600;
  font-size: var(--h1-size);
  margin: 0;
  width: 100%;
  letter-spacing: -1px;
  line-height: var(--h1-line-height);
}

h2 {
  font-family: var(--heading-font);
  font-weight: 600;
  font-size: var(--h2-size);
  margin: 0;
  width: 100%;
  letter-spacing: -0.25px;
  line-height: var(--h2-line-height);
}

h3 {
  font-family: var(--heading-font);
  font-weight: 500;
  font-size: var(--h3-size);
  margin: 0;
  width: 100%;
}

h4 {
  font-family: var(--heading-font);
  font-weight: 500;
  font-size: var(--h4-size);
  margin: 0;
  width: 100%;
  letter-spacing: 0.25px;
  /*border: 1px solid black;*/
}

h5 {
  font-family: var(--heading-font);
  font-weight: 500;
  font-size: var(--h5-size);
  margin: 0;
  width: 100%;
}

h6 {
  font-family: var(--heading-font);
  font-weight: 500;
  font-size: var(--h6-size);
  margin: 0;
  width: 100%;
}

a {
  text-decoration: none;
  color: var(--link-purple-1);
  font-weight: 500;
  transition: color 0.25s ease;
}
a:hover {
  color: var(--link-primary-accent-color);
}

p {
  font-size: var(--p-size);
  line-height: var(--p-line-height);
  font-weight: 400;
  margin: var(--spacing-md) 0;
}

/* Layout 2-column style */
.section-container {
  width: 100%;
  max-width: var(--standard-width);
  /*border: 1px solid black;*/
  box-sizing: border-box;
}
.two-column {
  width: 100%; /* 100% of section-container width since 
  it will nest into it */
  display: flex;
  flex-direction: row;
  justify-content: center;
  align-items: flex-start;
  box-sizing: border-box;
  /*border: 1px solid black;*/
}
.two-column > .column-left {
  width: 50%;
  box-sizing: border-box;
  padding: 0 var(--spacing-md) 0 0;
  display: flex;
  flex-direction: column;
  align-items: start; /*left to right*/
  justify-content: center;
  /*border: 1px solid black;*/
}

.two-column > .column-right {
  width: 50%;
  box-sizing: border-box;
  padding: 0 0 0 var(--spacing-md);
  display: flex;
  flex-direction: column;
  align-items: start; /*left to right*/
  justify-content: center;
}

.card {
  display: flex;
  flex-direction: column;
  justify-content: flex-start;
  align-items: flex-start;
  padding: var(--spacing-sm) var(--spacing-md) var(--spacing-sm) 0;
}
.card h3 {
  font-family: var(--heading-font);
  font-weight: 500;
  font-size: var(--h6-size);
  margin: 0;
  width: 100%;
}

.card .icon {
  height: 50px;
  margin: 0 0 var(--spacing-sm) 0;
}
.subtitle {
  color: var(--link-purple-1);
  font-family: var(--heading-font);
  font-weight: 500;
  font-size: var(--subtitle-size);
  line-height: var(--subtitle-line-height);
}

.subtitle2 {
  color: var(--link-blue-1);
  font-family: var(--heading-font);
  font-weight: 500;
  font-size: var(--subtitle-size);
  line-height: var(--subtitle-line-height);
}

.secondary-text {
  font-size: var(--secondary-text-size);
  line-height: var(--secondary-text-line-height);
  color: var(--text-grey);
  letter-spacing: 0.25px;
}
/* create button in general then create another class for arrow in button to add on later*/
/* BUTTON STYLES */
.primary-button {
  /*button with background*/
  font-family: var(--body-font);
  font-size: var(--btn-size);
  letter-spacing: 1.25px;
  font-weight: bold;
  border-radius: 20px;
  border: none;
  background-color: var(--link-primary-accent-color);
  color: var(--text-light);
  padding: var(--spacing-sm) var(--spacing-md);
  transition: all 0.15s ease;
}

.primary-button:hover {
  background-color: var(--primary-btn-hover-color);
  cursor: pointer;
}

.secondary-button {
  /*button with transparent background*/
  font-family: var(--body-font);
  font-size: var(--btn-size);
  letter-spacing: 1.25px;
  font-weight: bold;
  border-radius: 20px;
  border: none;
  background-color: transparent; /*white*/
  color: var(--link-primary-accent-color);
  transition: all 0.15s ease;
}
.secondary-button:hover {
  opacity: 0.75; /*make it a bit transparent*/
  cursor: pointer;
}

.with-icon {
  /*write flex in with-icon class but it will take
  affect on the whole button flex*/
  display: flex;
  justify-content: center;
  align-items: center;
}

.with-icon > img {
  transition: transform 0.25s ease;
}
/* style img when hover the icon (apply to whole button) */
.with-icon:hover > img {
  transform: translateX(4px);
}

/* NAVBAR */
nav {
  display: flex;
  justify-content: space-between;
  width: 100%;
  max-width: var(--standard-width);
  padding: 0 var(--spacing-md);
  /*border: 1px solid black;*/
  margin: 0 0 var(--spacing-xl) 0;
  box-sizing: border-box;
}
.menu {
  /* if make color: white here it doesnt change
    since it less specific than the link
    */
  display: flex;
  list-style: none;
  justify-content: center;
  align-items: center;
}
.menu a {
  color: var(--text-light);
  margin: 0 var(--spacing-md);
  font-weight: bold;
}
.menu a:hover {
  text-decoration: underline;
}
.nav-button {
  background-color: rgba(250, 250, 250, 0.25);
}
.nav-button:hover {
  background-color: rgba(250, 250, 250, 0.5);
}

/*HERO STYLE */
main {
  margin: var(--spacing-xl) 0 0 0;
  /*border: 1px solid black;*/
  /*when main is not set explicitly width,
  so its width will depend on content's width which is
  section container's width in this case.
  NOw set width is 100%, so it means 100% of the body width*/
  width: 100%;
}
/*
The <canvas> element in HTML5 is a versatile container for graphics. 
It provides a surface where you can draw and manipulate images
 and graphics dynamically using JavaScript. 
*/

/* ANIMATED GRADIENT*/
/*this part can not done with before pesudo because
it involves javascript. we can not use before pesudo 
class to manipulate graphic dynamiclly 
using java scipt right. only canvas is associated with it.

Use open-souce codepen for animated gradient
*/
#gradient-canvas {
  /* this part is for strip*/
  /*background-color: purple;*/
  width: 200%;
  height: 970px;
  transform: rotate(-10deg);
  position: absolute;
  left: -200px;
  top: -690px;
  z-index: -1;
  /*this variable name needs to be the same as in js file
  these variables are local use in this elemnet
  */
  --gradient-color-1: #ef008f;
  --gradinet-color-2: #6ec3f4;
  --gradient-color-3: #7038ff;
  --gradient-color-4: #ffba27;
}
/* NAVBAR */
.hamburger-button {
  width: 50px;
  height: 35px;
  display: none;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  background-color: rgba(250, 250, 250, 0.25);
  border-radius: 15px;
  transition: all 0.15s ease;
  position: absolute;
  right: 23.5px;
  z-index: 3; /*only work for positioned element*/
}
.hamburger-button:hover {
  background-color: rgba(250, 250, 250, 0.5);
  cursor: pointer;
}
.hamburger-button .bar {
  width: 25px;
  height: 4px;
  margin: 2px 0;
  box-sizing: border-box;
  background-color: white;
}

.one {
  animation: bar1SlideToCreateX 0.5s ease forwards;
}
.three {
  animation: bar3SlideToCreateX 0.5s ease forwards;
}
.two {
  animation: bar2Shrink 0.5s ease forwards;
}

@keyframes bar1SlideToCreateX {
  0% {
    transform: translateY(0px) rotate(0deg);
  }
  100% {
    transform: translateY(8px) rotate(45deg);
  }
}

@keyframes bar3SlideToCreateX {
  0% {
    transform: translateY(0px) rotate(0deg);
  }
  100% {
    transform: translateY(-8px) rotate(-45deg);
  }
}

@keyframes bar2Shrink {
  0% {
    transform: scale(1);
    opacity: 1;
  }
  100% {
    transform: scale(0);
    opacity: 0;
  }
}

.hamburger-slider {
  width: 100px;
  height: 100vh;
  background-color: white;
  opacity: 0.9;
  position: fixed;
  z-index: 2;
  top: 0px;
  right: -160px; /*initially hide to the right*/
  transition: transform 0.3s;
}
.openDrawer {
  transform: translateX(-160px);
}
.crossButton-openDrawer {
  background-color: var(--text-dark);
}
.crossButton-openDrawer:hover {
  background-color: rgba(0, 0, 0, 0.5);
}
.hamburger-slider .menu2 {
  height: 100vh;
  list-style-type: none;
  padding: 0;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
}
.hamburger-slider .menu2 li {
  margin: var(--spacing-md) 0;
}
.hamburger-slider .menu2 li a {
  color: var(--text-dark);
}
.hamburger-slider .menu2 li a:hover {
  text-decoration: underline;
}

/* HERO STYLES */
.hero {
  margin: var(--spacing-md) 0;
  width: 100%;
  display: flex;
  justify-content: center;
}
.button-container {
  display: flex;
  margin: var(--spacing-md) 0;
}
.button-container button:nth-of-type(2) {
  margin-left: var(--spacing-md);
  color: var(--linke-purple-2);
}

.hero p {
  max-width: 330px;
}

.hero .hero-phone-container {
  height: 512px;
  transform: translateY(-32px);
  align-items: flex-end;
}
.hero-phone {
  height: 576px;
  transform: translateX(32px);
}

/* PARTNER SECTION */
.partners-section {
  width: 100%;
  display: flex;
  justify-content: center;
}
.partner-grid {
  /* remember to add template when display grid so that it can render*/
  display: grid;
  grid-template-columns: 1fr 1fr 1fr 1fr;
  grid-template-rows: 1fr 1fr;
  margin: var(--spacing-xl) 0;
  column-gap: var(--spacing-md);
  row-gap: var(--spacing-lg);
}
/*
In CSS, when you specify only the height or width of an image,
 the aspect ratio of the image is preserved by default. 
 This means that the browser automatically adjusts 
 the other dimension to maintain the original proportions 
 of the image. This behavior ensures that the image does not become distorted.
*/
.partner-grid img {
  height: 60px;
  place-self: center;
}

/* PLATFORM SECTION */
.platform-section {
  padding: var(--spacing-xl) 0;
  /*border: 1px solid black;*/
  width: 100%;
  display: flex;
  justify-content: center;
  background-color: var(--bg-light-white);
}
.platform-section .description-platform {
  color: var(--link-purple-1);
}
.platform-section .description-platform::selection {
  color: var(--link-primary-accent-color);
}
.platform-section h2 {
  width: 50%;
  margin-bottom: var(--spacing-md);
}
.platform-section .primary-button {
  background-color: var(--link-purple-1);
  margin: var(--spacing-md) 0;
}
.platform-section .primary-button:hover {
  background-color: var(--link-primary-accent-color);
}

/* Graphic photo grid */
.graphic-photo-container {
  width: 100%;
  display: flex;
  justify-content: center;

  background-color: var(--bg-light-white);
  position: relative;
}
.graphic-photo-container::before {
  content: "";
  width: 50%;
  height: 200px;
  background-color: var(--bg-light-white);
  position: absolute;
  left: 0;
  bottom: -50px;
  transform: skewY(-10deg);
  z-index: -1;
}
.graphic-photo-container .photo-grid {
  display: grid;
  grid-template-areas:
    "bank invoice invoice"
    "phone invoice invoice"
    "phone dash dash";
  grid-gap: var(--spacing-md);
}
.graphic-photo-container .photo-grid img:nth-of-type(1) {
  width: 100%; /*100% of parent width of grid spot*/
  grid-area: bank;
  box-shadow: var(--standard-box-shadow);
}
.graphic-photo-container .photo-grid img:nth-of-type(2) {
  width: 100%;
  grid-area: invoice;
  box-shadow: var(--standard-box-shadow);
  border-radius: var(--spacing-md);
}
.graphic-photo-container .photo-grid img:nth-of-type(3) {
  width: 100%;
  grid-area: phone;
  box-shadow: var(--standard-box-shadow);
  border-radius: var(--standard-border-radius);
}
.graphic-photo-container .photo-grid img:nth-of-type(4) {
  width: 100%;
  grid-area: dash;
  box-shadow: var(--standard-box-shadow);
  border-radius: var(--spacing-md);
}

/*engineer section*/

.engineer-section-container {
  /*margin: var(--spacing-xl) 0;
  /*background-color: var(--link-primary-accent-color);*/
  color: var(--bg-white);

  width: 100%;
  display: flex;
  justify-content: center;
  padding: calc(var(--spacing-xl) * 2) 0;
  position: relative;
  z-index: 1;
}
.engineer-section-container::before {
  content: "";
  position: absolute;
  width: 100%;
  height: 1050px;
  background-color: var(--link-primary-accent-color);
  top: -32px;
  left: 0;
  z-index: -1; /*to be behind section-container which is always default of 1 z-index*/
  transform: skewY(-10deg);
}

.engineer-section-container .card-container {
  margin: var(--spacing-md) 0;
}

.engineer-section-container .column-right img {
  max-width: 470px; /* fixed width for it does not change*/
  border-radius: 15px;
  margin: var(--spacing-sm) 0;
}

.card-container {
  /*this not specify for engineer section only because we want to reuse it in another section*/
  display: flex;
}

.engineer-section-container .primary-button {
  background-color: var(--link-blue-1);
  color: var(--text-dark);
  margin: var(--spacing-md) 0;
}

.engineer-section-container .primary-button:hover {
  background-color: var(--bg-white);
}

.engineer-section-container .secondary-button {
  color: var(--link-blue-1);
}

/* WHY SWIPE SECTION */
.why-swipe-section {
  width: 100%;
  display: flex;
  justify-content: center;
  padding: calc(var(--spacing-xl) * 3) 0 calc(var(--spacing-xl) * 2) 0;
}
.why-swipe-section .card p {
  color: var(--text-dark);
}

.why-swipe-section .card-container {
  margin: var(--spacing-lg) 0;
}

.why-swipe-section .card-container .card {
  width: 25%;
  padding: 0 var(--spacing-md) 0 0;
  /*border: 1px solid black;*/
  margin: 0 var(--spacing-md) 0 0;
  box-sizing: border-box;
}

/* GLOBAL SCALE SECTION */
.global-scale-section {
  /*background-color: var(--link-primary-accent-color);*/
  color: var(--bg-white);
  width: 100%;
  display: flex;
  justify-content: center;
  position: relative;
  padding: calc(var(--spacing-xl) * 3) 0 0 0;
}
/*create before pesudo class for the strip background: accent*/
.global-scale-section::before {
  content: "";
  width: 100%;
  height: 1200px;
  background-color: var(--link-primary-accent-color);
  position: absolute;
  top: -32px;
  left: 0;
  transform: skewY(-10deg);
  z-index: -1;
}
.global-scale-section .global-scale-heading {
  max-width: 50%;
}

.global-scale-section .global-scale-heading + p {
  max-width: 50%;
}
.global-scale-section .card-container {
  margin: var(--spacing-xl) 0;
  /*border: 1px solid black;*/
}
.global-scale-section .card {
  width: 25%;
  box-sizing: border-box;
  padding: 0 var(--spacing-sm) 0 0;
  margin: 0 var(--spacing-md) 0 0;
}
.global-scale-section .section-container a {
  color: var(--link-blue-1);
}
.global-scale-section .section-container a:hover {
  color: var(--bg-white);
}

.global-scale-section .card-container .card h3 {
  border-left: 2px solid var(--link-blue-1);
  padding: 0 0 0 var(--spacing-sm);
  line-height: 20px; /*line-height make border-left same height as 97%*/
}

#global-image {
  max-width: 640px;
  opacity: 25%;
  position: absolute;
  top: 10%;
  right: 0;
}

/* Virtual Event Section */
.virtual-event-section {
  width: 100%;
  display: flex;
  justify-content: center;

  padding: calc(var(--spacing-xl) * 2) 0;
  /*background-color: #0a2540;*/
  position: relative;
}
.virtual-event-section::before {
  content: "";
  width: 100%;
  height: 100%;
  background-color: var(--bg-white);
  position: absolute;
  top: 0;
  left: 0;
  z-index: -1;
}
.virtual-event-section button {
  background-color: var(--link-purple-1);
  margin: var(--spacing-md) 0;
}
.virtual-event-section button:hover {
  background-color: var(--link-primary-accent-color);
}

.swipe-session-card {
  width: 400px;
  height: 446px;
  border-radius: 15px;
  box-shadow: var(--standard-box-shadow);
  overflow: hidden;
}

.swipe-session-card .card-top {
  width: 100%;
  height: 50%;
  display: flex;
  justify-content: center;
  align-items: center;
  background-color: #6962f7;
  position: relative;
}
.swipe-session-card .card-top::before {
  content: "";
  background: var(--primary-gradient);
  width: 100%;
  height: 150%;
  position: absolute;
  transform: skewY(-5deg);
  /*transfrom: skew to make it nghieng */
  top: -40%;
  z-index: 1; /* only for positioned element (at least one element)*/
}

#swipe-session-image {
  z-index: 2;
  width: 350px;
}
.virtual-event-section .avatar-wrapper {
  z-index: 3;
  position: absolute;
  bottom: -70px;
  left: var(--spacing-xl);
}
.virtual-event-section .avatar-wrapper .avatar {
  width: 80px;
}
.virtual-event-section .avatar-wrapper .two {
  left: 65px;
  position: absolute; /* closet positioned parent is avatar-wrapper*/
}

.virtual-event-section .card-bottom {
  width: 100%; /* of parent swipe-session-card 400*/
  height: 50%; /*223*/
  box-sizing: border-box;
  /*border: 1px solid black;*/
  padding: var(
    --spacing-xl
  ); /*remember to include box-sizing for it to include padding and border in the width*/
}
.virtual-event-section .card-bottom .secondary-text {
  color: var(--text-dark);
  width: 80%;
  font-weight: 700;
}
.virtual-event-section .card-bottom .subtitle {
  margin: var(--spacing-lg) 0 0 0;
}
.virtual-event-section .column-left {
  /*it initially at the top, since we havenot set height for it yet*/
  height: 446px; /* set the same height as swipe-session-card to be centered*/
}

/* Getting started section*/
.getting-started-section {
  width: 100%;
  display: flex;
  justify-content: center;
  padding: 0 0 var(--spacing-xl) 0;
}
.getting-started-section .primary-button {
  background-color: var(--link-purple-1);
  margin: var(--spacing-md) 0;
}
.getting-started-section .primary-button:hover {
  background-color: var(--link-primary-accent-color);
}
.getting-started-section .secondary-button {
  color: var(--link-purple-2);
}

.getting-started-section .card-container {
  width: 100%;
  /*border: 1px solid black;*/
}
.getting-started-section .card {
  width: 50%;
  box-sizing: border-box;
  padding: 0 var(--spacing-sm) 0 0;
  margin: 0 var(--spacing-md) 0 0;
  /*border: 1px solid black;*/
}
.getting-started-section .column-left {
  padding: 0 var(--spacing-xl) 0 0;
  /*border: 1px solid black;*/
}
/*.getting-started-section h3 {
  white-space: nowrap;
}*/

/* Footer Section*/
.footer {
  width: 100%;
  display: flex;
  justify-content: center;
  background-color: var(--bg-light-white);
  padding: var(--spacing-xl) 0;
}
#footer-logo {
  max-width: 108px;
  margin: 0 0 var(--spacing-md) 0;
}

.footer .section-container {
  display: flex;
}
.footer .column {
  width: 25%;
  /*border: 1px solid black;*/
}
.footer .column ul {
  /*ul default indented have padding and margin*/
  list-style: none;
  padding: 0;
}
.footer .column ul li {
  margin: var(--spacing-md) 0;
}

.footer .column a {
  color: var(--text-dark);
  font-weight: normal;
}
.footer .column a:hover {
  color: var(--link-purple-1);
  text-decoration: underline;
}
.footer .icon-link {
  display: flex;
  align-items: center;
  margin: var(--spacing-md) 0;
}
.footer .icon-link img {
  width: 24px;
}
.footer h3 {
  font-size: var(--h6-size);
  font-weight: 700;
}

/*one way to get it at an angle by skew, rotating it
or by using before or after
*/

/* Responsive */
@media only screen and (max-width: 1000px) {
  .hero .column-left {
    width: 60%;
  }
  .hero .column-right {
    width: 40%;
  }
  .hero-phone {
    height: 550px;
  }
}
@media only screen and (max-width: 890px) {
  .engineer-section-container .column-left {
    width: 60%;
  }
  .engineer-section-container .column-right {
    width: 40%;
  }
}

@media only screen and (max-width: 850px) {
  .section-container {
    padding: 0 var(--spacing-md);
  }
  .partner-grid img {
    width: 100%; /* parent is the frame*/
    height: auto; /* to adjust the correct height to the width*/
  }
}
/*first: identify our breakpoint*/
/* TABLET SIZE */
@media only screen and (max-width: 780px) {
  :root {
    --h1-size: 50px;
    --h1-line-height: 60px;
    --h2-size: 40px;
    --h2-line-height: 45px;
    --h3-size: 34px;
  }
  /*
   --h1-size: 60px; /* standard is 94*/
  /*--h2-size: 50px;
   --h3-size: 40px;
   --h4-size: 32px;
   --h5-size: 22px;
   --h6-size: 18px;
   --h1-line-height: 80px;
  --h2-line-height: 75px;
  */
  /*navbar*/
  nav {
    margin: 0;
  }
  nav .menu {
    display: none;
  }
  nav .nav-button {
    display: none;
  }
  .hamburger-button {
    display: flex;
  }
  /* hero styles*/
  main {
    margin: 0;
  }
  #gradient-canvas {
    height: 870px;
  }
  /*hero style*/
  .hero .column-left {
    width: 60%;
  }
  .hero .column-right {
    width: 40%;
  }
  .hero-phone {
    height: 450px;
    transform: translate(32px, 20px);
  }
  .hero .two-column {
    align-items: center;
  }
  /* UNIFIED PLATFORM */
  .platform-section h2 {
    width: 100%;
  }

  /* Engineer Section */
  .engineer-section-container .card-container {
    flex-direction: column;
  }

  /* why swipe section */
  .why-swipe-section .card-container {
    flex-wrap: wrap;
  }
  .why-swipe-section .card-container .card {
    width: 50%;
    margin: var(--spacing-md) 0;
  }

  /* global scale section */
  .global-scale-section .card-container {
    flex-wrap: wrap;
  }
  .global-scale-section .card-container .card {
    width: 50%;
    margin: var(--spacing-md) 0; /* reset margin for the wrap to work, otherwise not enough space*/
  }

  /*getting started section */
  .getting-started-section .two-column {
    align-items: center;
  }
  .getting-started-section .column-right .card-container {
    flex-wrap: wrap;
  }
  .getting-started-section .column-right .card {
    width: 100%;
    margin: var(--spacing-md) 0;
  }
}

@media only screen and (min-width: 781px) {
  .openDrawer {
    transform: translateX(160px); /* to close */
  }
}
/* MOBILE SIZE */
@media only screen and (max-width: 550px) {
  :root {
    --h1-size: 50px;
    --h1-line-height: 65px;
    --h2-size: 40px;
    --h2-line-height: 45px;
    --h3-size: 34px;
  }

  .partner-grid {
    grid-template-columns: 1fr 1fr;
  }

  .two-column {
    flex-direction: column;
  }
  .two-column .column-left {
    width: 100%;
  }
  .two-column .column-right {
    width: 100%;
    padding: 0;
  }

  /*navbar*/
  nav {
    margin: var(--spacing-sm) 0 var(--spacing-lg) 0;
  }
  /* hero styles*/
  main {
    margin: 0;
  }
  #gradient-canvas {
    height: 870px;
  }
  .column-right.hero-phone-container {
    /*to be more specific*/
    display: none;
  }
  /*grid-partner*/

  /*unified platform*/
  .platform-section {
    padding: var(--spacing-md) 0;
  }
  /* graphic section */
  .graphic-photo-container {
    padding: var(--spacing-sm) 0 var(--spacing-lg) 0;
  }
  /* Engineer section */
  .engineer-section-container {
    padding: var(--spacing-xl) 0;
  }

  .engineer-section-container .column-right {
    display: none;
  }
  .engineer-section-container::before {
    height: 950px;
  }

  /* why swipe section*/
  .why-swipe-section {
    padding: var(--spacing-sm) 0 0 0;
  }
  .why-swipe-section .card-container .card {
    width: 100%;
    margin: var(--spacing-sm) 0;
  }

  .why-swipe-section .card-container .card .icon {
    height: 40px;
  }
  /* global section */
  .global-scale-section {
    padding: calc(var(--spacing-xl) * 2) 0 0 0;
  }
  .global-scale-section .card-container .card {
    width: 100%;
    margin: var(--spacing-sm) 0; /* reset margin for the wrap to work, otherwise not enough space*/
  }
  #global-image {
    opacity: 10%;
  }
  .global-scale-section::before {
    top: 40px; /* for on iphone SE to include the last sentence*/
  }
  .global-scale-section::after {
    content: "";
    width: 100%;
    height: 100px;
    background-color: var(--link-primary-accent-color);
    position: absolute;
    bottom: 10px;
    left: 0;
  }

  /* Virtual event section */
  .virtual-event-section {
    padding: 0;
  }
  .virtual-event-section .swipe-session-card {
    width: 100%; /* column-right already responsive to 100% in flex-direction column, so the 100% of the parent is column-right*/
  }
  .virtual-event-section .swipe-session-card .secondary-text {
    width: 100%;
  }
  .virtual-event-section .swipe-session-card .card-top {
    height: 40%;
  }
  #swipe-session-image {
    width: 250px;
  }

  /*getting started section */
  .getting-started-section {
    padding: var(--spacing-xl) 0;
  }
  .getting-started-section .column-right .card-container {
    flex-wrap: wrap;
  }
  .getting-started-section .column-right .card {
    width: 100%;
    margin: var(--spacing-md) 0;
  }
  .getting-started-section .column-right .card .icon {
    width: 40px;
    height: auto;
  }

  /* footer */
  .footer .section-container {
    flex-wrap: wrap;
  }
  .footer .column {
    width: 50%;
    margin: var(--spacing-md) 0;
  }

  .footer .column a {
    font-size: 12px;
  }
  #footer-logo {
    width: 70px;
  }
  .footer .section-container .icon-link img {
    width: 18px;
  }
}
/* fixed for it can not scroll ngang overflow*/
html,
body {
  width: 100%;
  position: relative;
  overflow-x: hidden;
}
